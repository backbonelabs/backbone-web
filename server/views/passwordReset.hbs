<div class="container">
  <div class="row">
    <div class="col-xs-12 col-sm-6">
      <h1>Password Reset</h1>
      <form id="form">
        <div>
          <p>Enter your new password in the fields below.</p>
          <p>Your password must be between 8 and 72 characters long.</p>
        </div>
        <div class="form-group">
          <label for="password">New password</label>
          <input type="password" class="form-control" name="password" id="password" placeholder="New password">
        </div>
        <div class="form-group">
          <label for="verifyPassword">Verify password</label>
          <input type="password" class="form-control" name="verifyPassword" id="verifyPassword" placeholder="Verify password">
        </div>
        <button type="submit" class="btn btn-primary" id="submit">Reset password</button>
        <div class="alert alert-danger hidden" id="alert" style="margin-top: 15px;"></div>
      </form>
      <div class="alert alert-success hidden" id="success">Password successfully changed!</div>
    </div>
  </div>
</div>
<script src="/public/js/zepto.min.js"></script>
<script type="text/javascript">
// Disable ES6-specific lint rules
/* eslint-disable no-var, func-names, prefer-arrow-callback, object-shorthand */
  var $password = $('#password');
  var $verifyPassword = $('#verifyPassword');
  var $submit = $('#submit');
  var $alert = $('#alert');

  $submit.prop('disabled', true);

  function showError(errorMsg) {
    $alert.html('<span class="glyphicon glyphicon-alert" aria-hidden="true"></span> ' + errorMsg);
    $alert.removeClass('hidden');
  }

  function hideError() {
    $alert.html('');
    $alert.addClass('hidden');
  }

  function validateForm() {
    var password = $password.val();
    var verifyPassword = $verifyPassword.val();
    if (!password || !verifyPassword) {
      hideError();
    }
    if (password && verifyPassword) {
      if (password === verifyPassword) {
        hideError();
        $submit.prop('disabled', false);
        return true;
      }
      showError('Passwords must match');
    }
    $submit.prop('disabled', true);
    return false;
  }

  $.each([$password, $verifyPassword], function (i, field) {
    field.on('input', function () {
      validateForm();
    });
  });

  $('#form').on('submit', function (event) {
    var form = this;
    var queryString = window.location.search;
    var regex = new RegExp('[\\?&]token=([^&#]*)');
    var results = regex.exec(queryString);
    var token = results ? decodeURIComponent(results[1].replace(/\+/g, ' ')) : undefined;

    event.preventDefault();
    if (validateForm()) {
      $.ajax({
        type: 'POST',
        data: JSON.stringify({
          token: token,
          password: $password.val(),
          verifyPassword: $verifyPassword.val(),
        }),
        processData: false,
        contentType: 'application/json',
        success: function () {
          $(form).addClass('hidden');
          $('#success').removeClass('hidden');
        },
        error: function (xhr) {
          showError(xhr.responseText);
        },
      });
    }
  });
</script>
